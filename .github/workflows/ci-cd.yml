name: ✨ LightScript Workshop

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: "20" # Current LTS version
  ARTIFACT_NAME: lightscript-workshop.js
  ARTIFACT_PATH: ./target/lightscript-workshop.js

jobs:
  build_and_test:
    name: 🔨 Build + Test
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧹 Run linter
        run: npm run lint

      - name: 🧪 Run tests
        run: npm test

      - name: 🏗️ Build project
        run: npm run build

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}
          retention-days: 7 # Keep artifacts for 7 days

  analyze:
    name: 🔍 Analyze Project
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧹 Run ESLint
        run: npm run lint
        continue-on-error: true

      - name: 🔎 TypeScript type check
        run: npx tsc --noEmit
        continue-on-error: true

  release:
    name: 🚀 Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: build_and_test
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: 🎉 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ARTIFACT_NAME }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
